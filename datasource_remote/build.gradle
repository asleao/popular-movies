apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.sdk.compile

    defaultConfig {
        minSdkVersion versions.sdk.min
    }
    buildTypes {
        def propsFile = rootProject.file('keys.properties')
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        release {
            buildConfigField "String", "MdbApiKey", props["MdbApiKey"]
        }
        debug {
            buildConfigField "String", "MdbApiKey", props["MdbApiKey"]
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        jvmArgs '--enable-preview'
    }
}

dependencies {
    implementation project(':common')

    implementation dependency.di.dagger.core
    kapt dependency.di.dagger.compiler

    implementation dependency.moshi.core
    implementation dependency.moshi.kotlin
    kapt dependency.moshi.codegen

    api dependency.network.retrofit.core
    api dependency.network.retrofit.converters.moshi
    api dependency.network.okhttp3.core
    api dependency.network.okhttp3.interceptors.logging
    api dependency.network.paging.runtime

    testImplementation dependency.tests.junit.core
    testImplementation dependency.tests.junit.extensions
    testImplementation dependency.tests.junit.runner
    testImplementation dependency.tests.junit.rules
    testImplementation dependency.tests.junit.jupiter.api
    testRuntimeOnly dependency.tests.junit.jupiter.engine
    testImplementation dependency.tests.assertJ
    testImplementation dependency.tests.coroutines
    testImplementation dependency.tests.mockk.core
    testImplementation dependency.tests.mockk.jvm
}