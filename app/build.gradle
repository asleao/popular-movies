plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions' // TODO Change to kotlin-parcelize
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion versions.sdk.compile
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "br.com.popularmovies"
        minSdkVersion versions.sdk.min
        targetSdkVersion versions.sdk.target
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
        multiDexEnabled = true
    }

    buildTypes {
        def propsFile = rootProject.file('keys.properties')
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            buildConfigField "String", "MdbApiKey", props["MdbApiKey"]
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "MdbApiKey", props["MdbApiKey"]
        }
    }

    buildFeatures {
        dataBinding true
        compose true

    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    composeOptions {
        kotlinCompilerExtensionVersion versions.ui.compose.core
    }

    sourceSets.main.java.filter.exclude 'META-INF/**/*'

    packagingOptions {
        exclude 'META-INF/**/*'
    }

    androidExtensions {
        experimental = true
    }
    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':entities')
    implementation project(':common')
    implementation project(':repositories')

    implementation dependency.kotlin.stdlib
    implementation dependency.kotlin.reflect

    implementation dependency.android.core
    implementation dependency.android.appcompat
    implementation dependency.android.fragment
    implementation dependency.android.lifecycle.runtime
    implementation dependency.android.lifecycle.extensions
    implementation dependency.android.lifecycle.viewModel

    implementation dependency.ui.constraintlayout
    implementation dependency.ui.recyclerView
    implementation dependency.ui.navigation.fragment
    implementation dependency.ui.navigation.ui
    implementation dependency.ui.material
    implementation dependency.ui.progressbar.spinKit
    implementation dependency.ui.glide
    implementation dependency.ui.compose.ui
    implementation dependency.ui.compose.uitooling
    implementation dependency.ui.compose.foundation
    implementation dependency.ui.compose.activity
    implementation dependency.ui.compose.viewModel
    implementation dependency.ui.compose.runtime
    implementation dependency.ui.compose.compiler
    implementation dependency.ui.compose.material.core
    implementation dependency.ui.compose.material.icons.core
    implementation dependency.ui.compose.material.icons.extended

    implementation dependency.di.dagger.core
    kapt dependency.di.dagger.compiler
    compileOnly dependency.di.dagger.assistedInject.annotations
    kapt dependency.di.dagger.assistedInject.processor

    //Testing
    testImplementation dependency.tests.junit.core
    testImplementation dependency.tests.junit.extensions
    testImplementation dependency.tests.junit.runner
    testImplementation dependency.tests.junit.rules
    testImplementation dependency.tests.junit.jupiter.api
    testRuntimeOnly dependency.tests.junit.jupiter.engine
    testImplementation dependency.tests.assertJ
    testImplementation dependency.tests.coroutines
    testImplementation(dependency.tests.mockk.core) { exclude module: 'objenesis' }
    implementation(dependency.tests.mockk.core) { exclude module: 'objenesis' }
    androidTestImplementation dependency.tests.mockk.android
    testImplementation dependency.tests.expresso.core
    androidTestImplementation dependency.tests.expresso.intents
    androidTestImplementation dependency.tests.junit.androidtest.core
    androidTestRuntimeOnly dependency.tests.junit.androidtest.runner
    debugImplementation dependency.tests.android.core
    debugImplementation dependency.tests.android.fragment
}